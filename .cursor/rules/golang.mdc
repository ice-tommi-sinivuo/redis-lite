---
description: 
globs: **/*.go
alwaysApply: false
---
# Golang Coding Standards

## Language Version
- Always target Go version 1.24 when writing code in Golang

## Best Practices
- Follow Go best practices and conventions
- Follow the official Go style guide
- Maintain a folder structure that follows Go best practices

## Go Project Structure
```
project/
├── cmd/           # Main applications
├── internal/      # Private application and library code
├── pkg/           # Library code that's ok to use by external applications
├── api/           # OpenAPI/Swagger specs, JSON schema files, protocol definition files
├── web/           # Web application specific components
├── configs/       # Configuration file templates or default configs
├── init/          # System init (systemd, upstart, sysv) and process manager (runit, supervisord) configs
├── scripts/       # Scripts for various build, install, analysis, etc operations
├── build/         # Packaging and CI/CD
├── deployments/   # IaaS, PaaS, system and container orchestration deployment configurations
├── test/          # Additional external test apps and test data
├── docs/          # Design and user documents
├── tools/         # Project support tools
├── examples/      # Examples and/or public tutorials
├── third_party/   # External helper tools, forked code and other 3rd party utilities
├── githooks/      # Git hooks
├── assets/        # Other assets to go along with your repository
├── website/       # If you don't use GitHub Pages
└── README.md
```

## Code Style
- Use `gofmt` for code formatting
- Follow effective Go guidelines
- Use meaningful variable and function names
- Keep functions small and focused
- Use interfaces for abstraction
- Prefer composition over inheritance
